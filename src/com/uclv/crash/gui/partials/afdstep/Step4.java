/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.uclv.crash.gui.partials.afdstep;

import com.uclv.crash.core.State;
import java.util.List;

/**
 *
 * @author Yasiel Cabrera
 */
public class Step4 extends javax.swing.JPanel {

    private final Step step;

    /**
     * Creates new form Step4
     *
     * @param step
     */
    public Step4(Step step) {
        initComponents();
        this.step = step;

        int not_mark = ((Integer) step.getData()[0]);
        List<Boolean> mark = (List<Boolean>) step.getData()[1];
        List<List<State>> nStates = (List<List<State>>) step.getData()[2];
        List<State> nS = (List<State>) step.getData()[3];

        if (not_mark == 0) {
            jTextArea2.setText("Todos los estados están marcados, por lo tanto, se sale del ciclo.");
        } else {
            String ans = "";
            for (int i = 0; i < mark.size(); i++) {
                if (!mark.get(i)) {
                    List<State> l = nStates.get(i);
                    ans = AFDStep.toComma(l);
                    break;
                }
            }

            jTextArea2.setText("Hya " + not_mark + " estados sin marcar. Por lo que se selecciona T = {" + ans + "} y continúa el cilco.");
        }
        String text = "[ ";
        for (int i = 0; i < nStates.size(); i++) {
            text += "[{" + AFDStep.toComma(nStates.get(i)) + "}, "+ nS.get(i).getId()+", "+ (mark.get(i) ? "True" : "False") + "]" + (i == nStates.size() - 1 ? "" : ", ");
        }
        text += " ]";
        marks.setText(text);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        marks = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 42, 113));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mientras exista T en S' no marcado");

        jScrollPane3.setBorder(null);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(0, 42, 113));
        jTextArea2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setTabSize(4);
        jTextArea2.setText("Se indica que So' no está marcado. Se utilizará \"True\" si un estado está marcado y \"False\" si no lo está.");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea2);

        jScrollPane4.setBorder(null);

        marks.setEditable(false);
        marks.setBackground(new java.awt.Color(0, 42, 113));
        marks.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        marks.setForeground(new java.awt.Color(255, 255, 255));
        marks.setLineWrap(true);
        marks.setTabSize(4);
        marks.setText("S' = [ [{1,2}, True], [{4.3}, False] ]");
        marks.setWrapStyleWord(true);
        jScrollPane4.setViewportView(marks);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Estados formados hasta el momento (S'):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea marks;
    // End of variables declaration//GEN-END:variables
}
